- name: Disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable default nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: "Install NodeJS and MySQL"
  ansible.builtin.dnf:
    name: "{{item}}"
    state: installed
  loop:
    - nodejs
    - mysql

- name: Create expense user
  ansible.builtin.user:
    name: expense

- name: "Run Common Deployment Processes"
  ansible.builtin.import_role:
    name: common

- name: Download backend code
  ansible.builtin.get_url:
    url: "http://{{nexus_url}}:8081/repository/{{component}}/com/expense/{{component}}/{{app_version}}/{{component}}-{{app_version}}.zip"
    dest: /tmp/backend.zip

- name: Unzip backend.zip
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: Install Dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy backend.service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install Python MySQL Dependencies
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9

- name: Import data into mysql
  community.mysql.mysql_db: # connect (login details) + dump
    login_host: "{{ LOGIN_HOST }}"
    login_password: "{{ MY_SQL_PASSWORD }}"
    login_user: root
    target: /app/schema/backend.sql
    state: import
    name: all

- name: Daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Reload and Start backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes
